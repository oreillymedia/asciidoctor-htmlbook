<%#encoding:UTF-8%><%= @id && %(<a id="#{@id}"></a>) %><%
class_attr = (style_class = role) ? %( class="#{style_class}") : nil
case @type
when :emphasis %><em<%= attr?('role') ? %( #{attr 'role'}) : nil %>><%= @text %></em><%
when :strong %><strong<%= attr?('role') ? %( #{attr 'role'}) : nil %>><%= @text %></strong><%
when :monospaced %><code<%= attr?('role') ? %( #{attr 'role'}) : nil %>><%= @text %></code><%
when :superscript %><sup<%= attr?('role') ? %( #{attr 'role'}) : nil %>><%= @text %></sup><%
when :subscript %><sub<%= attr?('role') ? %( #{attr 'role'}) : nil %>><%= @text %></sub><%
when :double %><%= class_attr ? %(<span#{class_attr}>&#8220;#{@text}&#8221;</span>) : %(&#8220;#{@text}&#8221;) %><%
when :single %><%= class_attr ? %(<span#{class_attr}>&#8216;#{@text}&#8217;</span>) : %(&#8216;#{@text}&#8217;) %><%
when :latexmath
  open, close = ::Asciidoctor::INLINE_MATH_DELIMITERS[@type] %><% 
  if (@text.start_with? '\(') && (@text.end_with? '\)') %><%= %(<span data-type="tex">#{@text}</span>) %>
  <% else %><%= %(<span data-type="tex">#{open}#{@text}#{close}</span>) %>
  <% end %><%
when :asciimath
  open, close = ::Asciidoctor::INLINE_MATH_DELIMITERS[@type] %><% 
  if (@text.start_with? '$') && (@text.end_with? '$') %><%= %(<span data-type="tex">#{@text}</span>) %>
  <% else %><%= %(<span data-type="tex">$#{@text}$</span>) %>
  <% end %>
<% else %><% 
	if role == 'line-through' %>
<%= attr?('role') ? %(<span class="strikethrough">#{@text}</span>) : @text %><%
	else %>
<%= attr?('role') ? %(<span class="#{attr 'role'}">#{@text}</span>) : @text %><%
end %><% end %>
